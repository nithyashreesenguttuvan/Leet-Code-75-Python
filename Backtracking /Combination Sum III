class Solution:
    def combinationSum3(self, k: int, n: int) -> List[List[int]]:
        def backtrack(start, path, path_sum):
            if len(path) == k:
                if path_sum == n:
                    result.append(path[:])
                return
        
            for i in range(start, 10):
                if path_sum + i > n:
                    break
                path.append(i)
                backtrack(i + 1, path, path_sum + i)
                path.pop()
    
        result = []
        backtrack(1, [], 0)
        return result
